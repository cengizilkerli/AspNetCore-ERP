// <auto-generated />
using System;
using FinalProject.Erp.DataAccess.Concrete.EfCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Erp.DataAccess.Migrations
{
    [DbContext(typeof(ErpContext))]
    partial class ErpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.BankaHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("BankaId")
                        .HasColumnType("int");

                    b.Property<int?>("CariId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<string>("GC")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HareketTip")
                        .HasColumnType("tinyint");

                    b.Property<int?>("KasaId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MakbuzNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransferBankaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.HasIndex("CariId");

                    b.HasIndex("KasaId");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("TransferBankaId");

                    b.ToTable("BankaHareket");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.CariHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("BankaId")
                        .HasColumnType("int");

                    b.Property<int>("CariId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<string>("GC")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HareketTip")
                        .HasColumnType("tinyint");

                    b.Property<int?>("KasaId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MakbuzNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransferCariId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.HasIndex("CariId");

                    b.HasIndex("KasaId");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("TransferCariId");

                    b.ToTable("CariHareket");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.KasaHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("BankaId")
                        .HasColumnType("int");

                    b.Property<int?>("CariId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<string>("GC")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HareketTip")
                        .HasColumnType("tinyint");

                    b.Property<int>("KasaId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MakbuzNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransferKasaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.HasIndex("CariId");

                    b.HasIndex("KasaId");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("TransferKasaId");

                    b.ToTable("KasaHareket");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Identity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gsm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Banka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("BankaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BankaSube")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Faks")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gsm")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("HesapNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IbanNo")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("OzelKod1Id")
                        .HasColumnType("int");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Web")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Yetkili")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankaAdi")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("OzelKod1Id");

                    b.ToTable("Banka");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("CariAltGrubuId")
                        .HasColumnType("int");

                    b.Property<int?>("CariGrubuId")
                        .HasColumnType("int");

                    b.Property<byte>("CariTipi")
                        .HasColumnType("tinyint");

                    b.Property<string>("CariUnvani")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Faks")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<byte>("FiyatGrubu")
                        .HasColumnType("tinyint");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gsm")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("OzelKod1Id")
                        .HasColumnType("int");

                    b.Property<int?>("OzelKod2Id")
                        .HasColumnType("int");

                    b.Property<int?>("OzelKod3Id")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("TcKimlikNo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<string>("VergiDaire")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Web")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Yetkili")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CariAltGrubuId");

                    b.HasIndex("CariGrubuId");

                    b.HasIndex("CariUnvani")
                        .IsUnique();

                    b.HasIndex("IlceId");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("OzelKod1Id");

                    b.HasIndex("OzelKod2Id");

                    b.HasIndex("OzelKod3Id");

                    b.HasIndex("SehirId");

                    b.HasIndex("UlkeId");

                    b.ToTable("Cari");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Adres")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DepoAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yetkili")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepoAdi")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("KasaAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("OzelKod1Id")
                        .HasColumnType("int");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Yetkili")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("KasaAdi")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("OzelKod1Id");

                    b.ToTable("Kasa");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("AlisFiyat1")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("AlisFiyat2")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("AlisFiyat3")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<short>("AlisKdv")
                        .HasColumnType("smallint");

                    b.Property<byte>("AlisKdvDurum")
                        .HasColumnType("tinyint");

                    b.Property<string>("Barkod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<byte>("GecerliFiyat")
                        .HasColumnType("tinyint");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<int?>("OzelKod1Id")
                        .HasColumnType("int");

                    b.Property<int?>("OzelKod2Id")
                        .HasColumnType("int");

                    b.Property<int?>("OzelKod3Id")
                        .HasColumnType("int");

                    b.Property<decimal>("SatisFiyat1")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("SatisFiyat2")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("SatisFiyat3")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<short>("SatisKdv")
                        .HasColumnType("smallint");

                    b.Property<byte>("SatisKdvDurum")
                        .HasColumnType("tinyint");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("StokAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("StokAltGrubuId")
                        .HasColumnType("int");

                    b.Property<int?>("StokGrubuId")
                        .HasColumnType("int");

                    b.Property<int>("StokTurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("MarkaId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OzelKod1Id");

                    b.HasIndex("OzelKod2Id");

                    b.HasIndex("OzelKod3Id");

                    b.HasIndex("StokAdi")
                        .IsUnique();

                    b.HasIndex("StokAltGrubuId");

                    b.HasIndex("StokGrubuId");

                    b.HasIndex("StokTurId");

                    b.ToTable("Stok");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("BirimAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BirimAdi")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("Birim");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.CariAltGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CariAltGrubuAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CariGrubuId")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariGrubuId");

                    b.ToTable("CariAltGrubu");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.CariGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CariGrubuAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariGrubuAdi")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("CariGrubu");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.DovizKur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short>("Birim")
                        .HasColumnType("smallint");

                    b.Property<decimal>("DovizAlis")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("DovizCinsi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DovizKodu")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal>("DovizSatis")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal(8,4)");

                    b.Property<decimal>("EfektifAlis")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal(8,4)");

                    b.Property<decimal>("EfektifSatis")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal(8,4)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DovizKur");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.ToTable("Ilce");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("MarkaAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("MarkaAdi")
                        .IsUnique();

                    b.ToTable("Marka");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.ModelKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("MarkaId")
                        .HasColumnType("int");

                    b.Property<string>("ModelAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("OzelKodAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OzelKodSira")
                        .HasColumnType("int");

                    b.Property<int>("OzelKodTip")
                        .HasColumnType("int");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Kod");

                    b.HasIndex("OzelKodAdi");

                    b.ToTable("OzelKod");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("SehirAdi")
                        .IsUnique();

                    b.ToTable("Sehir");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.StokAltGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("StokAltGrubuAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StokGrubuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StokGrubuId");

                    b.ToTable("StokAltGrubu");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.StokGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("StokGrubuAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("StokGrubuAdi")
                        .IsUnique();

                    b.ToTable("StokGrubu");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.StokTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("StokTurAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("StokTurAdi")
                        .IsUnique();

                    b.ToTable("StokTur");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("int");

                    b.Property<int?>("GeriAlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeriAlmaTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("UlkeAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("UlkeAdi")
                        .IsUnique();

                    b.ToTable("Ulke");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.BankaHareket", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Banka", "Banka")
                        .WithMany()
                        .HasForeignKey("BankaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Kasa", "Kasa")
                        .WithMany()
                        .HasForeignKey("KasaId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Banka", "TransferBanka")
                        .WithMany()
                        .HasForeignKey("TransferBankaId");

                    b.Navigation("Banka");

                    b.Navigation("Cari");

                    b.Navigation("Kasa");

                    b.Navigation("TransferBanka");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.CariHareket", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Banka", "Banka")
                        .WithMany()
                        .HasForeignKey("BankaId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Kasa", "Kasa")
                        .WithMany()
                        .HasForeignKey("KasaId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Cari", "TransferCari")
                        .WithMany()
                        .HasForeignKey("TransferCariId");

                    b.Navigation("Banka");

                    b.Navigation("Cari");

                    b.Navigation("Kasa");

                    b.Navigation("TransferCari");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Hareketler.KasaHareket", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Banka", "Banka")
                        .WithMany()
                        .HasForeignKey("BankaId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Kasa", "Kasa")
                        .WithMany()
                        .HasForeignKey("KasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Erp.Model.Entities.Kartlar.Kasa", "TransferKasa")
                        .WithMany()
                        .HasForeignKey("TransferKasaId");

                    b.Navigation("Banka");

                    b.Navigation("Cari");

                    b.Navigation("Kasa");

                    b.Navigation("TransferKasa");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Banka", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod1")
                        .WithMany()
                        .HasForeignKey("OzelKod1Id");

                    b.Navigation("OzelKod1");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Cari", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.CariAltGrubu", "CariAltGrubu")
                        .WithMany()
                        .HasForeignKey("CariAltGrubuId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.CariGrubu", "CariGrubu")
                        .WithMany()
                        .HasForeignKey("CariGrubuId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod1")
                        .WithMany()
                        .HasForeignKey("OzelKod1Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod2")
                        .WithMany()
                        .HasForeignKey("OzelKod2Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod3")
                        .WithMany()
                        .HasForeignKey("OzelKod3Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId");

                    b.Navigation("CariAltGrubu");

                    b.Navigation("CariGrubu");

                    b.Navigation("Ilce");

                    b.Navigation("OzelKod1");

                    b.Navigation("OzelKod2");

                    b.Navigation("OzelKod3");

                    b.Navigation("Sehir");

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Kasa", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod1")
                        .WithMany()
                        .HasForeignKey("OzelKod1Id");

                    b.Navigation("OzelKod1");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Kartlar.Stok", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Birim", "Birim")
                        .WithMany()
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.ModelKart", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod1")
                        .WithMany()
                        .HasForeignKey("OzelKod1Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod2")
                        .WithMany()
                        .HasForeignKey("OzelKod2Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.OzelKod", "OzelKod3")
                        .WithMany()
                        .HasForeignKey("OzelKod3Id");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.StokAltGrubu", "StokAltGrubu")
                        .WithMany()
                        .HasForeignKey("StokAltGrubuId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.StokGrubu", "StokGrubu")
                        .WithMany()
                        .HasForeignKey("StokGrubuId");

                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.StokTur", "StokTur")
                        .WithMany()
                        .HasForeignKey("StokTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Marka");

                    b.Navigation("Model");

                    b.Navigation("OzelKod1");

                    b.Navigation("OzelKod2");

                    b.Navigation("OzelKod3");

                    b.Navigation("StokAltGrubu");

                    b.Navigation("StokGrubu");

                    b.Navigation("StokTur");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.CariAltGrubu", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.CariGrubu", "CariGrubu")
                        .WithMany()
                        .HasForeignKey("CariGrubuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariGrubu");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.Ilce", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.ModelKart", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("FinalProject.Erp.Model.Entities.Parametreler.StokAltGrubu", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Parametreler.StokGrubu", "StokGrubu")
                        .WithMany()
                        .HasForeignKey("StokGrubuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StokGrubu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("FinalProject.Erp.Model.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
